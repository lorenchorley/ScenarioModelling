"Name"    = 'Human Readable Grammar'
"Author"  = 'LChorley'
"Version" = '1.0'
"About"   = ''

"Start Symbol" = <Program>
"Case Sensitive" = False 


!{WS}                  = {Whitespace} - {CR} - {LF} ! Remove newlines from the whitespace def
!Whitespace            = {WS}+
!NewLine               = {CR}{LF} | {CR} ! Just one new line
!<nlp>                   ::= NewLine*      ! New lines possible
!<nlr>                   ::= NewLine+      ! New lines required

{WS} = {Whitespace} - {CR} - {LF}
Whitespace = {WS}+
NewLine = {CR}{LF}|{CR}

<nl>     ::= NewLine <nl>
          |  NewLine

<nlo>    ::= NewLine <nlo>
          |

! ----------------------------------------------------------------- Sets

{FirstIdentifierCharacter} = {Letter} + [_]
{OtherIdentifierCharacter} = {AlphaNumeric} + [_éèàäëïöüùçâêîôûÇÄÅÉæÆÖÜøØƒáíóúñÑÁÂÀãÃðÐÊËÈiÍÎÏÌÓßÔÒõÕµþÞÚÛÙýÝ'']
{StringCharacter}          = {All Printable} - ["\] + {HT} + {CR} + {LF}


! ----------------------------------------------------------------- Terminals

!'[a-zA-Z_][a-zA-Z_0-9]*'                                              Identificateur;
Identifier = {FirstIdentifierCharacter}{OtherIdentifierCharacter}*

!'[0-9]+(\.[0-9]+)?'                                                   ConstNum;
NumberLiteral = {Number}+ ('.' {Number}+)?

!'[^\"]*'                                                              ConstCh;
!'\"'                                                                  %ignore, %pop;
StringLiteral = '"' {StringCharacter}* '"'


! ===========================================================================
! C.1.8 Literals 
! ===========================================================================

<ID> ::= Identifier
      
<String> ::= Identifier
          |  StringLiteral


! ===========================================================================
! C.2.4 Expressions 
! ===========================================================================

<Program> ::= <Definitions>

<Definitions> ::= <Definitions> <Definition> 
               |  <nlo>

<Definition> ::= <NamedDefinition>
              |  <UnnamedDefinition>
              |  <NamedLink>
              |  <UnnamedLink>
              
<NamedDefinition> ::= <ID> <String> <nlo> '{' <nlo> <Definitions> <nlo> '}' <nl>
                   |  <ID> <String> <nl>

<UnnamedDefinition> ::= <ID> <nlo> '{' <nlo> <Definitions> <nlo> '}' <nl>
                     |  <ID> <nl>
                   
<UnnamedLink> ::= <String> '->' <String> <nl>
                   
<NamedLink> ::= <String> '->' <String> ':' <String> <nl>
